Running on local machine
Parent Run ID: AutoML_d65684ee-11e6-48af-8021-84d77f6e7428

Current status: DatasetFeaturization. Beginning to featurize the dataset.
Current status: DatasetFeaturizationCompleted. Completed featurizing the dataset.
Heuristic parameters: Target_Lag = '[1]', Target_Rolling_Window = '2', Max_Horizon = '6'.
/projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/azureml/_restclient/workspace_client.py:380: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead
  self._logger.warn('Converting non-string tag to string: (%s: %s)', key, val)
WARNING - Converting non-string tag to string: (forecasting_target_lags: [1])
WARNING - Converting non-string tag to string: (forecasting_target_rolling_window_size: 2)
WARNING - Converting non-string tag to string: (forecasting_max_horizon: 6)
Current status: DatasetCrossValidationSplit. Generating individually featurized CV splits.
Current status: DatasetFeaturization. Beginning to featurize the CV split.
/projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/azureml/automl/runtime/featurizer/transformer/timeseries/rolling_window.py:260: UserWarning: RollingWindow: "center" is not a configurable window option.
  'a configurable window option.')
/projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/azureml/automl/runtime/featurizer/transformer/timeseries/rolling_window.py:260: UserWarning: RollingWindow: "closed" is not a configurable window option.
  'a configurable window option.')
Current status: DatasetFeaturizationCompleted. Completed featurizing the CV split.
Current status: DatasetFeaturization. Beginning to featurize the CV split.
Current status: DatasetFeaturizationCompleted. Completed featurizing the CV split.
Current status: DatasetFeaturization. Beginning to featurize the CV split.
Current status: DatasetFeaturizationCompleted. Completed featurizing the CV split.
Current status: DatasetFeaturization. Beginning to featurize the CV split.
Current status: DatasetFeaturizationCompleted. Completed featurizing the CV split.
Current status: DatasetFeaturization. Beginning to featurize the CV split.
Current status: DatasetFeaturizationCompleted. Completed featurizing the CV split.

****************************************************************************************************
DATA GUARDRAILS: 

TYPE:         Frequency detection
STATUS:       PASSED
DESCRIPTION:  The time series was analyzed, all data points are aligned with detected frequency.
              

****************************************************************************************************

TYPE:         Missing feature values imputation
STATUS:       PASSED
DESCRIPTION:  No feature missing values were detected in the training data.
              Learn more about missing value imputation: https://aka.ms/AutomatedMLFeaturization

****************************************************************************************************

TYPE:         Memory Issues Detection
STATUS:       PASSED
DESCRIPTION:  The selected horizon, lag and rolling window values were analyzed, and no potential memory issues were detected.
              Learn more about time-series forecasting configurations: https://aka.ms/AutomatedMLForecastingConfiguration

****************************************************************************************************
Current status: ModelSelection. Beginning model selection.

****************************************************************************************************
ITERATION: The iteration being evaluated.
PIPELINE: A summary description of the pipeline being evaluated.
DURATION: Time taken for the current iteration.
METRIC: The result of computing score on the fitted pipeline.
BEST: The best observed score thus far.
****************************************************************************************************

 ITERATION   PIPELINE                                       DURATION      METRIC      BEST
/projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/azureml/automl/core/_downloader.py:81: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead
  download_start_time = time.clock()
/projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/azureml/automl/core/_downloader.py:89: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead
  download_end_time = time.clock()
         0   /projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/sklearn/base.py:197: FutureWarning: From version 0.24, get_params will raise an AttributeError if a parameter cannot be retrieved as an instance attribute. Previously it would return None.
  FutureWarning)
MaxAbsScaler DecisionTree                      0:00:25       0.0130    0.0130
         1   MinMaxScaler DecisionTree                      0:00:22       0.0148    0.0130
         2   StandardScalerWrapper LassoLars                0:00:22       0.0119    0.0119
         3   RobustScaler ElasticNet                        0:00:27       0.0112    0.0112
         4   StandardScalerWrapper LassoLars                0:00:21       0.0119    0.0112
         5   RobustScaler ElasticNet                        0:00:34       0.0121    0.0112
         6   RobustScaler DecisionTree                      0:00:21       0.0197    0.0112
         7   MinMaxScaler DecisionTree                      0:00:29       0.0129    0.0112
         8   RobustScaler DecisionTree                      0:00:24       0.0090    0.0090
         9   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_d65684ee-11e6-48af-8021-84d77f6e7428_9/outputs/conda_env_v_1_0_0.yml?sv=2019-02-02&sr=b&sig=%2F7gaeFuKBbJXafh1Y14YShtn5GANrfaO3F3%2F7YbYPzw%3D&st=2020-09-29T01%3A45%3A01Z&se=2020-09-30T01%3A55%3A01Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
MinMaxScaler DecisionTree                      0:03:05       0.0161    0.0090
        10   StandardScalerWrapper DecisionTree             0:00:21       0.0125    0.0090
        11   StandardScalerWrapper DecisionTree             0:00:21       0.0139    0.0090
        12   RobustScaler DecisionTree                      0:00:21       0.0101    0.0090
        13   RobustScaler ElasticNet                        0:00:25       0.0119    0.0090
        14   StandardScalerWrapper DecisionTree             0:00:21       0.0164    0.0090
        15   MinMaxScaler DecisionTree                      0:00:22       0.0183    0.0090
        16   MinMaxScaler DecisionTree                      0:00:21       0.0122    0.0090
        17   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_d65684ee-11e6-48af-8021-84d77f6e7428_17/outputs/scoring_file_v_1_0_0.py?sv=2019-02-02&sr=b&sig=YI30nbtfQbGNZtn3SaWbqevddby6AWDm72cLeRNhOYo%3D&st=2020-09-29T01%3A50%3A46Z&se=2020-09-30T02%3A00%3A46Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
RobustScaler DecisionTree                      0:03:06       0.0131    0.0090
        18   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_d65684ee-11e6-48af-8021-84d77f6e7428_18/outputs/pipeline_graph.json?sv=2019-02-02&sr=b&sig=fmMEs9Xlso4iExN%2FskY9UAzokUkC1Tkm842m%2Fs7bA%2Bs%3D&st=2020-09-29T01%3A53%3A51Z&se=2020-09-30T02%3A03%3A51Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
RobustScaler DecisionTree                      0:00:22       0.0159    0.0090
        19   StandardScalerWrapper DecisionTree             0:00:22       0.0169    0.0090
        20   StandardScalerWrapper DecisionTree             0:00:22       0.0172    0.0090
        21   StandardScalerWrapper ExtremeRandomTrees       0:00:24       0.0108    0.0090
        22   MinMaxScaler LightGBM                          0:00:23       0.0157    0.0090
        23   MinMaxScaler ExtremeRandomTrees                0:00:26       0.0115    0.0090
        24   MinMaxScaler DecisionTree                      0:00:23       0.0170    0.0090
        25   RobustScaler DecisionTree                      0:00:22       0.0197    0.0090
        26   MinMaxScaler DecisionTree                      0:00:22       0.0200    0.0090
        27   StandardScalerWrapper ExtremeRandomTrees       0:00:24       0.0107    0.0090
        28   StandardScalerWrapper RandomForest             0:00:23       0.0104    0.0090
        29   RobustScaler RandomForest                      0:00:19       0.0154    0.0090
        30   RobustScaler DecisionTree                      0:00:22       0.0120    0.0090
        31   RobustScaler RandomForest                      0:00:23       0.0245    0.0090
        32   MinMaxScaler ExtremeRandomTrees                0:00:28       0.0050    0.0050
        33   RobustScaler ExtremeRandomTrees                0:00:23       0.0145    0.0050
        34   MinMaxScaler LightGBM                          0:00:25       0.0161    0.0050
        35   RobustScaler ExtremeRandomTrees                0:00:23       0.0053    0.0050
        36   RobustScaler ExtremeRandomTrees                0:00:24       0.0119    0.0050
        37   MinMaxScaler RandomForest                      0:00:24       0.0071    0.0050
        38   StandardScalerWrapper ExtremeRandomTrees       0:00:29       0.0109    0.0050
        39   RobustScaler RandomForest                      0:00:24       0.0128    0.0050
        40   MinMaxScaler ExtremeRandomTrees                0:00:24       0.0408    0.0050
        41   StandardScalerWrapper ExtremeRandomTrees       0:00:25       0.0123    0.0050
        42   RobustScaler ExtremeRandomTrees                0:00:23       0.0127    0.0050
        43   RobustScaler ExtremeRandomTrees                0:00:28       0.0105    0.0050
        44   MinMaxScaler ExtremeRandomTrees                0:00:24       0.0131    0.0050
        45   MinMaxScaler ExtremeRandomTrees                0:00:24       0.0105    0.0050
        46   RobustScaler ExtremeRandomTrees                0:00:25       0.0105    0.0050
        47   RobustScaler RandomForest                      0:00:23       0.0115    0.0050
        48   MinMaxScaler ExtremeRandomTrees                0:00:28       0.0125    0.0050
        49   MinMaxScaler ExtremeRandomTrees                0:00:25       0.0104    0.0050
        50   RobustScaler ExtremeRandomTrees                0:00:29       0.0129    0.0050
        51   StandardScalerWrapper ExtremeRandomTrees       0:00:31       0.0122    0.0050
        52   StandardScalerWrapper ExtremeRandomTrees       0:00:31       0.0102    0.0050
        53   RobustScaler ExtremeRandomTrees                0:00:24       0.0057    0.0050
        54   StandardScalerWrapper ExtremeRandomTrees       0:00:27       0.0108    0.0050
        55   RobustScaler ExtremeRandomTrees                0:00:27       0.0111    0.0050
        56   StandardScalerWrapper RandomForest             0:00:23       0.0090    0.0050
        57   MinMaxScaler ExtremeRandomTrees                0:00:25       0.0106    0.0050
        58   MinMaxScaler ExtremeRandomTrees                0:00:24       0.0118    0.0050
        59   RobustScaler ExtremeRandomTrees                0:00:24       0.0116    0.0050
        60   MinMaxScaler ExtremeRandomTrees                0:00:27       0.0101    0.0050
        61   RobustScaler ExtremeRandomTrees                0:00:25       0.0083    0.0050
        62   StandardScalerWrapper ExtremeRandomTrees       0:00:24       0.0108    0.0050
        63   MinMaxScaler RandomForest                      0:00:25       0.0093    0.0050
        64   RobustScaler ExtremeRandomTrees                0:00:27       0.0110    0.0050
        65   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_d65684ee-11e6-48af-8021-84d77f6e7428_65/outputs/env_dependencies.json?sv=2019-02-02&sr=b&sig=q2cBlYAwChFQrlTtyMiw4QFfKX8DeznBet1RJZ4SAq8%3D&st=2020-09-29T02%3A13%3A36Z&se=2020-09-30T02%3A23%3A36Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_d65684ee-11e6-48af-8021-84d77f6e7428_65/outputs/scoring_file_v_1_0_0.py?sv=2019-02-02&sr=b&sig=FOhv4oaR8nOZ931J0hD7d0Z1JgCQkt8W7PjbzkL2BzQ%3D&st=2020-09-29T02%3A13%3A36Z&se=2020-09-30T02%3A23%3A36Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_d65684ee-11e6-48af-8021-84d77f6e7428_65/outputs/pipeline_graph.json?sv=2019-02-02&sr=b&sig=J9%2FHfY5M%2FhMczOZsaZkt0Y%2Bm1x1UdfWzDdooaWN7Aio%3D&st=2020-09-29T02%3A13%3A36Z&se=2020-09-30T02%3A23%3A36Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
RobustScaler ExtremeRandomTrees                0:03:06       0.0080    0.0050
        66   RobustScaler RandomForest                      0:00:26       0.0106    0.0050
        67   RobustScaler ExtremeRandomTrees                0:00:24       0.0108    0.0050
        68   StandardScalerWrapper RandomForest             0:00:26       0.0124    0.0050
        69   MinMaxScaler ExtremeRandomTrees                0:00:27       0.0106    0.0050
        70   RobustScaler ExtremeRandomTrees                0:00:30       0.0122    0.0050
        71   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_d65684ee-11e6-48af-8021-84d77f6e7428_71/outputs/model.pkl?sv=2019-02-02&sr=b&sig=qxh2m%2FD8vJCgOxvROFCBFlg1u7x6xbJsnyqSOJc09Ko%3D&st=2020-09-29T02%3A18%3A56Z&se=2020-09-30T02%3A28%3A56Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
StandardScalerWrapper ExtremeRandomTrees       0:03:00       0.0084    0.0050
        72   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_d65684ee-11e6-48af-8021-84d77f6e7428_72/outputs/pipeline_graph.json?sv=2019-02-02&sr=b&sig=xlS9jguiIaCLpvWXsd5YQLTru0rS2%2FnR4urZiWAZzpQ%3D&st=2020-09-29T02%3A21%3A57Z&se=2020-09-30T02%3A31%3A57Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
StandardScalerWrapper ExtremeRandomTrees       0:00:30       0.0138    0.0050
        73   MinMaxScaler ExtremeRandomTrees                0:00:24       0.0083    0.0050
        74   StandardScalerWrapper ExtremeRandomTrees       0:00:29       0.0126    0.0050
        75   StandardScalerWrapper ExtremeRandomTrees       0:00:24       0.0110    0.0050
        76   StandardScalerWrapper ExtremeRandomTrees       0:00:25       0.0114    0.0050
        77   StandardScalerWrapper ExtremeRandomTrees       0:00:26       0.0104    0.0050
        78   MinMaxScaler DecisionTree                      0:00:22       0.0154    0.0050
        79   RobustScaler ExtremeRandomTrees                0:00:28       0.0121    0.0050
        80   StandardScalerWrapper ExtremeRandomTrees       0:00:25       0.0211    0.0050
        81   StandardScalerWrapper RandomForest             0:00:25       0.0145    0.0050
        82   RobustScaler RandomForest                      0:00:24       0.0066    0.0050
        83   MinMaxScaler ExtremeRandomTrees                0:00:27       0.0112    0.0050
        84   StandardScalerWrapper RandomForest             0:00:26       0.0185    0.0050
        85   StandardScalerWrapper ExtremeRandomTrees       0:00:24       0.0088    0.0050
        86   RobustScaler ExtremeRandomTrees                0:00:31       0.0102    0.0050
        87   MinMaxScaler ExtremeRandomTrees                0:00:30       0.0132    0.0050
        88   StandardScalerWrapper RandomForest             0:00:26       0.0086    0.0050
        89   StandardScalerWrapper ExtremeRandomTrees       0:00:23       0.0086    0.0050
        90   StandardScalerWrapper ExtremeRandomTrees       0:00:25       0.0101    0.0050
        91   StandardScalerWrapper ExtremeRandomTrees       0:00:27       0.0116    0.0050
        92   StandardScalerWrapper GradientBoosting         0:00:35       0.0168    0.0050
        93   StandardScalerWrapper RandomForest             0:00:24       0.0145    0.0050
        94   RobustScaler ExtremeRandomTrees                0:00:29       0.0098    0.0050
        95   MinMaxScaler ExtremeRandomTrees                0:00:24       0.0129    0.0050
        96   MinMaxScaler ExtremeRandomTrees                0:00:32       0.0102    0.0050
        97   StandardScalerWrapper ExtremeRandomTrees       0:00:30       0.0084    0.0050
        98   StandardScalerWrapper ExtremeRandomTrees       0:00:26       0.0100    0.0050
        99   StandardScalerWrapper ExtremeRandomTrees       0:00:24       0.0107    0.0050
       100   MinMaxScaler ExtremeRandomTrees                0:00:29       0.0053    0.0050
       101   StandardScalerWrapper ExtremeRandomTrees       0:00:27       0.0133    0.0050
       102   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_d65684ee-11e6-48af-8021-84d77f6e7428_102/outputs/model.pkl?sv=2019-02-02&sr=b&sig=0WuhDD81oJsZQ4XfGDSRudqhok826yYU3OT96DJmOJU%3D&st=2020-09-29T02%3A35%3A34Z&se=2020-09-30T02%3A45%3A34Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
StandardScalerWrapper ExtremeRandomTrees       0:03:13       0.0143    0.0050
       103   StandardScalerWrapper ExtremeRandomTrees       0:00:29       0.0094    0.0050
       104   StandardScalerWrapper RandomForest             0:00:28       0.0084    0.0050
       105   RobustScaler ExtremeRandomTrees                0:00:26       0.0065    0.0050
       106   RobustScaler RandomForest                      0:00:31       0.0120    0.0050
       107   RobustScaler RandomForest                      0:00:26       0.0072    0.0050
       108   /projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/sklearn/base.py:197: FutureWarning: From version 0.24, get_params will raise an AttributeError if a parameter cannot be retrieved as an instance attribute. Previously it would return None.
  FutureWarning)
VotingEnsemble                                 0:01:46       0.0044    0.0044
Stopping criteria reached at iteration 109. Ending experiment.
****************************************************************************************************
numpy.ufunc size changed, may indicate binary incompatibility. Expected 192 from C header, got 216 from PyObject
Current status: BestRunExplainModel. Best run model explanations started
Current status: ModelExplanationDataSetSetup. Model explanations data setup completed
Current status: PickSurrogateModel. Choosing LightGBM as the surrogate model for explanations
Current status: EngineeredFeatureExplanations. Computation of engineered features started
Setting feature_perturbation = "tree_path_dependent" because no background data was given.
Current status: EngineeredFeatureExplanations. Computation of engineered features completed
Current status: BestRunExplainModel. Best run model explanations completed
****************************************************************************************************
Best pipeline:
<class 'sklearn.ensemble._voting.VotingRegressor'>
0. Pipeline(memory=None,
         steps=[('minmaxscaler', MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('extratreesregressor',
                 ExtraTreesRegressor(bootstrap=True, ccp_alpha=0.0,
                                     criterion='mse', max_depth=None,
                                     max_features=0.5, max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=0.01600296187889058,
                                     min_samples_split=0.15297321160913582,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=400, n_jobs=-1,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)
1. Pipeline(memory=None,
         steps=[('minmaxscaler', MinMaxScaler(copy=True, feature_range=(0, 1))),
                ('extratreesregressor',
                 ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0,
                                     criterion='mse', max_depth=None,
                                     max_features=0.6, max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=0.023457724724161487,
                                     min_samples_split=0.310675990983383,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=600, n_jobs=-1,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)
2. Pipeline(memory=None,
         steps=[('robustscaler',
                 RobustScaler(copy=True, quantile_range=[10, 90],
                              with_centering=True, with_scaling=True)),
                ('extratreesregressor',
                 ExtraTreesRegressor(bootstrap=True, ccp_alpha=0.0,
                                     criterion='mse', max_depth=None,
                                     max_features=0.4, max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=0.01600296187889058,
                                     min_samples_split=0.15297321160913582,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=25, n_jobs=-1,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)
3. Pipeline(memory=None,
         steps=[('robustscaler',
                 RobustScaler(copy=True, quantile_range=[10, 90],
                              with_centering=True, with_scaling=False)),
                ('extratreesregressor',
                 ExtraTreesRegressor(bootstrap=True, ccp_alpha=0.0,
                                     criterion='mse', max_depth=None,
                                     max_features=0.6, max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=0.009017208223328022,
                                     min_samples_split=0.1281422388944084,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=25, n_jobs=-1,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)
4. Pipeline(memory=None,
         steps=[('robustscaler',
                 RobustScaler(copy=True, quantile_range=[10, 90],
                              with_centering=False, with_scaling=False)),
                ('decisiontreeregressor',
                 DecisionTreeRegressor(ccp_alpha=0.0, criterion='friedman_mse',
                                       max_depth=None, max_features=0.8,
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=0.04146860325085487,
                                       min_samples_split=0.031067599098338297,
                                       min_weight_fraction_leaf=0.0,
                                       presort='deprecated', random_state=None,
                                       splitter='best'))],
         verbose=False)
5. Pipeline(memory=None,
         steps=[('robustscaler',
                 RobustScaler(copy=True, quantile_range=[10, 90],
                              with_centering=False, with_scaling=False)),
                ('decisiontreeregressor',
                 DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse',
                                       max_depth=None, max_features=None,
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=0.003851381725578514,
                                       min_samples_split=0.012814223889440833,
                                       min_weight_fraction_leaf=0.0,
                                       presort='deprecated', random_state=None,
                                       splitter='random'))],
         verbose=False)

['horizon_origin', '_automl_target_col_lag1H', '_automl_target_col_min_window2H', '_automl_target_col_max_window2H', '_automl_target_col_mean_window2H', 'year', 'half', 'quarter', 'month', 'day', 'hour', 'am_pm', 'hour12', 'wday', 'qday', 'week']
       RawFeatureName TypeDetected Dropped  EngineeredFeatureCount  \
0  datetime            DateTime     No      12                       
1  _automl_target_col  Numeric      No      4                        

                                                                                                                                                                                                                                                 Transformations  
0  [MaxHorizonFeaturizer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer]  
1  [Lag, minRollingWindow, maxRollingWindow, meanRollingWindow]                                                                                                                                                                                                   
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
