Running on local machine
Parent Run ID: AutoML_bb15a417-49c0-4fa8-ad14-65007ad86397

Current status: DatasetFeaturization. Beginning to featurize the dataset.
Current status: DatasetFeaturizationCompleted. Completed featurizing the dataset.
Heuristic parameters: Target_Lag = '[1]', Target_Rolling_Window = '3', Max_Horizon = '6'.
/projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/azureml/_restclient/workspace_client.py:380: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead
  self._logger.warn('Converting non-string tag to string: (%s: %s)', key, val)
WARNING - Converting non-string tag to string: (forecasting_target_lags: [1])
WARNING - Converting non-string tag to string: (forecasting_target_rolling_window_size: 3)
WARNING - Converting non-string tag to string: (forecasting_max_horizon: 6)
Current status: DatasetCrossValidationSplit. Generating individually featurized CV splits.
Current status: DatasetFeaturization. Beginning to featurize the CV split.
/projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/azureml/automl/runtime/featurizer/transformer/timeseries/rolling_window.py:260: UserWarning: RollingWindow: "center" is not a configurable window option.
  'a configurable window option.')
/projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/azureml/automl/runtime/featurizer/transformer/timeseries/rolling_window.py:260: UserWarning: RollingWindow: "closed" is not a configurable window option.
  'a configurable window option.')
Current status: DatasetFeaturizationCompleted. Completed featurizing the CV split.
Current status: DatasetFeaturization. Beginning to featurize the CV split.
Current status: DatasetFeaturizationCompleted. Completed featurizing the CV split.
Current status: DatasetFeaturization. Beginning to featurize the CV split.
Current status: DatasetFeaturizationCompleted. Completed featurizing the CV split.
Current status: DatasetFeaturization. Beginning to featurize the CV split.
Current status: DatasetFeaturizationCompleted. Completed featurizing the CV split.
Current status: DatasetFeaturization. Beginning to featurize the CV split.
Current status: DatasetFeaturizationCompleted. Completed featurizing the CV split.

****************************************************************************************************
DATA GUARDRAILS: 

TYPE:         Frequency detection
STATUS:       PASSED
DESCRIPTION:  The time series was analyzed, all data points are aligned with detected frequency.
              

****************************************************************************************************

TYPE:         Missing feature values imputation
STATUS:       PASSED
DESCRIPTION:  No feature missing values were detected in the training data.
              Learn more about missing value imputation: https://aka.ms/AutomatedMLFeaturization

****************************************************************************************************

TYPE:         Memory Issues Detection
STATUS:       PASSED
DESCRIPTION:  The selected horizon, lag and rolling window values were analyzed, and no potential memory issues were detected.
              Learn more about time-series forecasting configurations: https://aka.ms/AutomatedMLForecastingConfiguration

****************************************************************************************************
Current status: ModelSelection. Beginning model selection.

****************************************************************************************************
ITERATION: The iteration being evaluated.
PIPELINE: A summary description of the pipeline being evaluated.
DURATION: Time taken for the current iteration.
METRIC: The result of computing score on the fitted pipeline.
BEST: The best observed score thus far.
****************************************************************************************************

 ITERATION   PIPELINE                                       DURATION      METRIC      BEST
/projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/azureml/automl/core/_downloader.py:81: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead
  download_start_time = time.clock()
/projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/azureml/automl/core/_downloader.py:89: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead
  download_end_time = time.clock()
         0   /projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/sklearn/base.py:197: FutureWarning: From version 0.24, get_params will raise an AttributeError if a parameter cannot be retrieved as an instance attribute. Previously it would return None.
  FutureWarning)
MaxAbsScaler DecisionTree                      0:00:25       0.0367    0.0367
         1   MinMaxScaler DecisionTree                      0:00:22       0.0386    0.0367
         2   StandardScalerWrapper LassoLars                0:00:21       0.0386    0.0367
         3   RobustScaler ElasticNet                        0:00:29       0.0345    0.0345
         4   StandardScalerWrapper LassoLars                0:00:21       0.0385    0.0345
         5   RobustScaler ElasticNet                        0:00:38       0.0384    0.0345
         6   RobustScaler DecisionTree                      0:00:23       0.0293    0.0293
         7   MinMaxScaler DecisionTree                      0:00:22       0.0366    0.0293
         8   RobustScaler DecisionTree                      0:00:23       0.0221    0.0221
         9   MinMaxScaler DecisionTree                      0:00:44       0.0287    0.0221
        10   StandardScalerWrapper DecisionTree             0:00:22       0.0422    0.0221
        11   StandardScalerWrapper DecisionTree             0:00:22       0.0418    0.0221
        12   RobustScaler DecisionTree                      0:00:24       0.0368    0.0221
        13   RobustScaler ElasticNet                        0:00:22       0.0350    0.0221
        14   StandardScalerWrapper DecisionTree             0:00:28       0.0344    0.0221
        15   MinMaxScaler DecisionTree                      0:00:21       0.0389    0.0221
        16   MinMaxScaler DecisionTree                      0:00:21       0.0363    0.0221
        17   RobustScaler DecisionTree                      0:00:21       0.0273    0.0221
        18   RobustScaler DecisionTree                      0:00:22       0.0255    0.0221
        19   StandardScalerWrapper DecisionTree             0:00:28       0.0320    0.0221
        20   StandardScalerWrapper DecisionTree             0:00:23       0.0320    0.0221
        21   StandardScalerWrapper ExtremeRandomTrees       0:00:23       0.0218    0.0218
        22   MinMaxScaler LightGBM                          0:00:22       0.0221    0.0218
        23   MinMaxScaler DecisionTree                      0:00:19       0.0317    0.0218
        24   MinMaxScaler ExtremeRandomTrees                0:00:28       0.0253    0.0218
        25   MinMaxScaler ExtremeRandomTrees                0:00:24       0.0248    0.0218
        26   StandardScalerWrapper RandomForest             0:00:23       0.0195    0.0195
        27   StandardScalerWrapper ExtremeRandomTrees       0:00:22       0.0255    0.0195
        28   RobustScaler RandomForest                      0:00:24       0.0312    0.0195
        29   StandardScalerWrapper RandomForest             0:00:24       0.0277    0.0195
        30   StandardScalerWrapper RandomForest             0:00:28       0.0260    0.0195
        31   MinMaxScaler LightGBM                          0:00:23       0.0299    0.0195
        32   MinMaxScaler ExtremeRandomTrees                0:00:28       0.0239    0.0195
        33   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_bb15a417-49c0-4fa8-ad14-65007ad86397_33/outputs/model.pkl?sv=2019-02-02&sr=b&sig=PF%2BcO2iovSTOH0SWAf8LUBKNGxy9wdvA5pimWauz254%3D&st=2020-09-29T02%3A54%3A19Z&se=2020-09-30T03%3A04%3A19Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
RobustScaler RandomForest                      0:03:05       0.0206    0.0195
        34   StandardScalerWrapper RandomForest             0:00:25       0.0232    0.0195
        35   RobustScaler RandomForest                      0:00:18       0.0209    0.0195
        36   MinMaxScaler ExtremeRandomTrees                0:00:24       0.0266    0.0195
        37   RobustScaler LightGBM                          0:00:23       0.0307    0.0195
        38   RobustScaler RandomForest                      0:00:25       0.0202    0.0195
        39   StandardScalerWrapper ExtremeRandomTrees       0:00:28       0.0175    0.0175
        40   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_bb15a417-49c0-4fa8-ad14-65007ad86397_40/outputs/env_dependencies.json?sv=2019-02-02&sr=b&sig=%2FPVOvewE6WRFzk85nd%2BoNI5KAweal3HNheXxoAN15GE%3D&st=2020-09-29T02%3A59%3A50Z&se=2020-09-30T03%3A09%3A50Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
StandardScalerWrapper ExtremeRandomTrees       0:03:08       0.0167    0.0167
        41   RobustScaler ExtremeRandomTrees                0:00:32       0.0242    0.0167
        42   MinMaxScaler ExtremeRandomTrees                0:00:28       0.0152    0.0152
        43   MinMaxScaler RandomForest                      0:00:29       0.0218    0.0152
        44   RobustScaler RandomForest                      0:00:24       0.0175    0.0152
        45   MinMaxScaler ExtremeRandomTrees                0:00:26       0.0160    0.0152
        46   RobustScaler ExtremeRandomTrees                0:00:24       0.0177    0.0152
        47   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_bb15a417-49c0-4fa8-ad14-65007ad86397_47/outputs/model.pkl?sv=2019-02-02&sr=b&sig=Vr0D3zwjeDoGcjT%2Ff6ujt5joebkXDrla6hvTpTZUOq0%3D&st=2020-09-29T03%3A05%3A44Z&se=2020-09-30T03%3A15%3A44Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_bb15a417-49c0-4fa8-ad14-65007ad86397_47/outputs/pipeline_graph.json?sv=2019-02-02&sr=b&sig=47US%2BtShiSHuvVwRj%2BgiIFor2PLY8OwdfEd4%2BgL9XMc%3D&st=2020-09-29T03%3A05%3A44Z&se=2020-09-30T03%3A15%3A44Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
RobustScaler ExtremeRandomTrees                0:03:02       0.0232    0.0152
        48   MinMaxScaler ExtremeRandomTrees                0:00:25       0.0281    0.0152
        49   RobustScaler ExtremeRandomTrees                0:00:27       0.0245    0.0152
        50   RobustScaler ExtremeRandomTrees                0:00:27       0.0136    0.0136
        51   RobustScaler ExtremeRandomTrees                0:00:25       0.0308    0.0136
        52   StandardScalerWrapper ExtremeRandomTrees       0:00:26       0.0257    0.0136
        53   RobustScaler ExtremeRandomTrees                0:00:23       0.0225    0.0136
        54   MinMaxScaler RandomForest                      0:00:24       0.0190    0.0136
        55   MinMaxScaler ExtremeRandomTrees                0:00:25       0.0232    0.0136
        56   RobustScaler ExtremeRandomTrees                0:00:29       0.0183    0.0136
        57   MinMaxScaler ExtremeRandomTrees                0:00:24       0.0210    0.0136
        58   MinMaxScaler ExtremeRandomTrees                0:00:26       0.0232    0.0136
        59   RobustScaler ExtremeRandomTrees                0:00:27       0.0222    0.0136
        60   RobustScaler ExtremeRandomTrees                0:00:24       0.0195    0.0136
        61   RobustScaler ExtremeRandomTrees                0:00:25       0.0159    0.0136
        62   StandardScalerWrapper ExtremeRandomTrees       0:00:29       0.0231    0.0136
        63   MinMaxScaler RandomForest                      0:00:24       0.0143    0.0136
        64   StandardScalerWrapper ExtremeRandomTrees       0:00:24       0.0271    0.0136
        65   RobustScaler ExtremeRandomTrees                0:00:27       0.0135    0.0135
        66   StandardScalerWrapper GradientBoosting         0:00:36       0.0310    0.0135
        67   StandardScalerWrapper ExtremeRandomTrees       0:00:28       0.0243    0.0135
        68   StandardScalerWrapper RandomForest             0:00:24       0.0153    0.0135
        69   RobustScaler RandomForest                      0:00:27       0.0106    0.0106
        70   RobustScaler RandomForest                      0:00:25       0.0300    0.0106
        71   RobustScaler ExtremeRandomTrees                0:00:24       0.0199    0.0106
        72   RobustScaler ExtremeRandomTrees                0:00:31       0.0216    0.0106
        73   MinMaxScaler ExtremeRandomTrees                0:00:25       0.0174    0.0106
        74   RobustScaler RandomForest                      0:00:24       0.0177    0.0106
        75   RobustScaler RandomForest                      0:00:24       0.0209    0.0106
        76   StandardScalerWrapper ExtremeRandomTrees       0:00:21       0.0251    0.0106
        77   RobustScaler GradientBoosting                  0:00:38       0.0223    0.0106
        78   RobustScaler RandomForest                      0:00:25       0.0120    0.0106
        79   MinMaxScaler ExtremeRandomTrees                0:00:26       0.0241    0.0106
        80   StandardScalerWrapper RandomForest             0:00:24       0.0282    0.0106
        81   StandardScalerWrapper ExtremeRandomTrees       0:00:23       0.0230    0.0106
        82   StandardScalerWrapper RandomForest             0:00:24       0.0165    0.0106
        83   StandardScalerWrapper ExtremeRandomTrees       0:00:25       0.0212    0.0106
        84   StandardScalerWrapper RandomForest             0:00:26       0.0120    0.0106
        85   StandardScalerWrapper RandomForest             0:00:29       0.0319    0.0106
        86   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_bb15a417-49c0-4fa8-ad14-65007ad86397_86/outputs/env_dependencies.json?sv=2019-02-02&sr=b&sig=1s24OBRywOmIxJaIDreIxnQomzdLuigIw3FozQGc0RM%3D&st=2020-09-29T03%3A25%3A38Z&se=2020-09-30T03%3A35%3A38Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_bb15a417-49c0-4fa8-ad14-65007ad86397_86/outputs/pipeline_graph.json?sv=2019-02-02&sr=b&sig=O%2BrYydMcrt2FpD%2Bd9e4pzntf6AYK6MXCbJMsEUdHdSo%3D&st=2020-09-29T03%3A25%3A38Z&se=2020-09-30T03%3A35%3A38Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
RobustScaler ExtremeRandomTrees                0:03:06       0.0234    0.0106
        87   StandardScalerWrapper ExtremeRandomTrees       0:00:27       0.0225    0.0106
        88   MinMaxScaler ExtremeRandomTrees                0:00:23       0.0185    0.0106
        89   StandardScalerWrapper RandomForest             0:00:25       0.0186    0.0106
        90   RobustScaler RandomForest                      0:00:23       0.0163    0.0106
        91   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_bb15a417-49c0-4fa8-ad14-65007ad86397_91/outputs/env_dependencies.json?sv=2019-02-02&sr=b&sig=vWbFfjBkQQ3P2MQAQLzyI5CQ5HlA1CpVL4wZCf6fBNg%3D&st=2020-09-29T03%3A30%3A32Z&se=2020-09-30T03%3A40%3A32Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
RobustScaler ExtremeRandomTrees                0:03:09       0.0217    0.0106
        92   StandardScalerWrapper ExtremeRandomTrees       0:00:29       0.0195    0.0106
        93   StandardScalerWrapper ExtremeRandomTrees       0:00:21       0.0173    0.0106
        94   StandardScalerWrapper ExtremeRandomTrees       0:00:23       0.0160    0.0106
        95   WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))': /azureml/ExperimentRun/dcid.AutoML_bb15a417-49c0-4fa8-ad14-65007ad86397_95/outputs/conda_env_v_1_0_0.yml?sv=2019-02-02&sr=b&sig=ItY9gjfse9ToOclg6RrSbXVW%2B6zZSaklKl7juJlEQN0%3D&st=2020-09-29T03%3A34%3A50Z&se=2020-09-30T03%3A44%3A50Z&sp=rcw&comp=block&blockid=TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQSUzRA%3D%3D&timeout=30
MinMaxScaler RandomForest                      0:03:06       0.0338    0.0106
        96   StandardScalerWrapper ExtremeRandomTrees       0:00:27       0.0238    0.0106
        97   StandardScalerWrapper ExtremeRandomTrees       0:00:27       0.0236    0.0106
        98   MinMaxScaler ExtremeRandomTrees                0:00:23       0.0268    0.0106
        99   RobustScaler ExtremeRandomTrees                0:00:24       0.0200    0.0106
       100   StandardScalerWrapper RandomForest             0:00:28       0.0213    0.0106
       101   StandardScalerWrapper ExtremeRandomTrees       0:00:26       0.0163    0.0106
       102   /projappl/project_2003107/anaconda3/envs/azure_automl/lib/python3.7/site-packages/sklearn/base.py:197: FutureWarning: From version 0.24, get_params will raise an AttributeError if a parameter cannot be retrieved as an instance attribute. Previously it would return None.
  FutureWarning)
VotingEnsemble                                 0:01:46       0.0083    0.0083
Stopping criteria reached at iteration 103. Ending experiment.
****************************************************************************************************
numpy.ufunc size changed, may indicate binary incompatibility. Expected 192 from C header, got 216 from PyObject
Current status: BestRunExplainModel. Best run model explanations started
Current status: ModelExplanationDataSetSetup. Model explanations data setup completed
Current status: PickSurrogateModel. Choosing LightGBM as the surrogate model for explanations
Current status: EngineeredFeatureExplanations. Computation of engineered features started
Setting feature_perturbation = "tree_path_dependent" because no background data was given.
Current status: EngineeredFeatureExplanations. Computation of engineered features completed
Current status: BestRunExplainModel. Best run model explanations completed
****************************************************************************************************
Best pipeline:
<class 'sklearn.ensemble._voting.VotingRegressor'>
0. Pipeline(memory=None,
         steps=[('robustscaler',
                 RobustScaler(copy=True, quantile_range=[10, 90],
                              with_centering=False, with_scaling=False)),
                ('randomforestregressor',
                 RandomForestRegressor(bootstrap=True, ccp_alpha=0.0,
                                       criterion='mse', max_depth=None,
                                       max_features=0.5, max_leaf_nodes=None,
                                       max_samples=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=0.05040306135985514,
                                       min_samples_split=0.00630957344480193,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=200, n_jobs=-1,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=False))],
         verbose=False)
1. Pipeline(memory=None,
         steps=[('standardscalerwrapper',
                 <azureml.automl.runtime.shared.model_wrappers.StandardScalerWrapper object at 0x7f7c4bf94810>),
                ('randomforestregressor',
                 RandomForestRegressor(bootstrap=True, ccp_alpha=0.0,
                                       criterion='mse', max_depth=None,
                                       max_features=0.5, max_leaf_nodes=None,
                                       max_samples=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=0.0023646822772690063,
                                       min_samples_split=0.1281422388944084,
                                       min_weight_fraction_leaf=0.0,
                                       n_estimators=200, n_jobs=-1,
                                       oob_score=False, random_state=None,
                                       verbose=0, warm_start=False))],
         verbose=False)
2. Pipeline(memory=None,
         steps=[('robustscaler',
                 RobustScaler(copy=True, quantile_range=[10, 90],
                              with_centering=False, with_scaling=False)),
                ('decisiontreeregressor',
                 DecisionTreeRegressor(ccp_alpha=0.0, criterion='friedman_mse',
                                       max_depth=None, max_features=0.8,
                                       max_leaf_nodes=None,
                                       min_impurity_decrease=0.0,
                                       min_impurity_split=None,
                                       min_samples_leaf=0.04146860325085487,
                                       min_samples_split=0.031067599098338297,
                                       min_weight_fraction_leaf=0.0,
                                       presort='deprecated', random_state=None,
                                       splitter='best'))],
         verbose=False)
3. Pipeline(memory=None,
         steps=[('robustscaler',
                 RobustScaler(copy=True, quantile_range=[10, 90],
                              with_centering=True, with_scaling=True)),
                ('extratreesregressor',
                 ExtraTreesRegressor(bootstrap=True, ccp_alpha=0.0,
                                     criterion='mse', max_depth=None,
                                     max_features=0.4, max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_impurity_split=None,
                                     min_samples_leaf=0.01600296187889058,
                                     min_samples_split=0.15297321160913582,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=25, n_jobs=-1,
                                     oob_score=False, random_state=None,
                                     verbose=0, warm_start=False))],
         verbose=False)

['horizon_origin', '_automl_target_col_lag1H', '_automl_target_col_min_window3H', '_automl_target_col_max_window3H', '_automl_target_col_mean_window3H', 'year', 'half', 'quarter', 'month', 'day', 'hour', 'am_pm', 'hour12', 'wday', 'qday', 'week']
       RawFeatureName TypeDetected Dropped  EngineeredFeatureCount  \
0  datetime            DateTime     No      12                       
1  _automl_target_col  Numeric      No      4                        

                                                                                                                                                                                                                                                 Transformations  
0  [MaxHorizonFeaturizer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer, DateTimeTransformer]  
1  [Lag, minRollingWindow, maxRollingWindow, meanRollingWindow]                                                                                                                                                                                                   
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

The concatenated objects may have different ts_value_colname values, result using the ts_value_colname of the first object
